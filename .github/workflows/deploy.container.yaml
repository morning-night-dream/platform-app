name: deploy container
run-name: ${{ github.ref_name }} by @${{ github.actor }} [${{ github.workflow }}]
on:
  # pull_request:
  #   paths:
  #     - .github/workflows/container.push.yaml
  workflow_dispatch:
  schedule:
    # 金曜24時(JST)
    - cron: '0 15 * * 5'
jobs:
  container:
    runs-on: ubuntu-22.04
    outputs:
      tag: ${{ steps.create-tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create tag
        id: create-tag
        run: |
          TAG=`date +%Y-%m-%d-%H-%M-%S`
          echo "TAG=${TAG}" >> $GITHUB_ENV
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
      - name: Install gettext
        run: sudo apt-get install gettext
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          cache: true
          cache-dependency-path: go.sum
      - name: Install ko
        run: go install github.com/google/ko@latest
      - name: Docker login
        run: ko login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }} index.docker.io
      - name: Build and push app api container
        working-directory: ./cmd/app/api
        run: |
          envsubst '$$TAG' < .ko.yaml > .ko.yaml
          KO_DOCKER_REPO=${{ secrets.DOCKERHUB_USERNAME }}/platform-app-api \
          SOURCE_DATE_EPOCH=$(date +%s) \
          ko build --sbom=none --bare --tags=${TAG},latest ./ --platform=linux/amd64
      - name: Build and push app core container
        working-directory: ./cmd/app/core
        run: |
          envsubst '$$TAG' < .ko.yaml > .ko.yaml
          KO_DOCKER_REPO=${{ secrets.DOCKERHUB_USERNAME }}/platform-app-core \
          SOURCE_DATE_EPOCH=$(date +%s) \
          ko build --sbom=none --bare --tags=${TAG},latest ./ --platform=linux/amd64
      - name: Build and push db migrate container
        working-directory: ./cmd/db/migrate
        run: |
          IMAGE_NAME=
          KO_DOCKER_REPO=${{ secrets.DOCKERHUB_USERNAME }}/platform-db-migrate \
          SOURCE_DATE_EPOCH=$(date +%s) \
          ko build --sbom=none --bare --tags=${TAG},latest ./ --platform=linux/amd64
      - name: Build and push app core container
        working-directory: ./cmd/db/backup
        run: |
          KO_DOCKER_REPO=${{ secrets.DOCKERHUB_USERNAME }}/platform-db-backup \
          SOURCE_DATE_EPOCH=$(date +%s) \
          ko build --sbom=none --bare --tags=${TAG},latest ./ --platform=linux/amd64
  tag:
    needs: container
    runs-on: ubuntu-22.04
    steps:
      - name: Generate token
        id: generate-token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.BOT_GITHUB_APP_ID }}
          private_key: ${{ secrets.BOT_GITHUB_APP_PRIVATE_KEY }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ steps.generate-token.outputs.token }}
      - name: Create tag
        run: |
          git tag ${{ needs.container.outputs.tag }}
          git push origin ${{ needs.container.outputs.tag }}
  dispatch:
    needs: container
    runs-on: ubuntu-22.04
    steps:
      - name: Generate token
        id: generate-token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.BOT_GITHUB_APP_ID }}
          private_key: ${{ secrets.BOT_GITHUB_APP_PRIVATE_KEY }}
      - name: Dispatch
        run: |
          curl -X POST \
            -H "Accespt: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ steps.generate-token.outputs.token }}" \
            https://api.github.com/repos/morning-night-dream/platform-infra/dispatches \
            -d '{"event_type": "manifest-update-prod", "client_payload": {"tag": "${{ needs.container.outputs.tag }}"}}'
